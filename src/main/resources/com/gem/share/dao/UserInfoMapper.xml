<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.share.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.gem.share.entity.UserInfo">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="userAccount" jdbcType="VARCHAR" property="useraccount" />
    <result column="userPwd" jdbcType="VARCHAR" property="userpwd" />
    <result column="userSex" jdbcType="CHAR" property="usersex" />
    <result column="userAge" jdbcType="INTEGER" property="userage" />
    <result column="userEducate" jdbcType="VARCHAR" property="usereducate" />
    <result column="userGraduate" jdbcType="VARCHAR" property="usergraduate" />
    <result column="userIntroduce" jdbcType="VARCHAR" property="userintroduce" />
    <result column="userNickName" jdbcType="VARCHAR" property="usernickname" />
    <result column="userImg" jdbcType="VARCHAR" property="userimg" />
    <result column="userEmail" jdbcType="VARCHAR" property="useremail" />
    <result column="addresss_id" jdbcType="INTEGER" property="addresssId" />
    <result column="userPhone" jdbcType="CHAR" property="userphone" />
    <result column="userEnergy" jdbcType="VARCHAR" property="userenergy" />
    <result column="userIdNumber" jdbcType="CHAR" property="useridnumber" />
    <result column="userStatus" jdbcType="VARCHAR" property="userstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, userAccount, userPwd, userSex, userAge, userEducate, userGraduate, userIntroduce, 
    userNickName, userImg, userEmail, addresss_id, userPhone, userEnergy, userIdNumber, 
    userStatus
  </sql>
  <select id="selectByExample" parameterType="com.gem.share.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gem.share.entity.UserInfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.share.entity.UserInfo">
    insert into userinfo (user_id, userAccount, userPwd, 
      userSex, userAge, userEducate, 
      userGraduate, userIntroduce, userNickName, 
      userImg, userEmail, addresss_id, 
      userPhone, userEnergy, userIdNumber, 
      userStatus)
    values (#{userId,jdbcType=INTEGER}, #{useraccount,jdbcType=VARCHAR}, #{userpwd,jdbcType=VARCHAR}, 
      #{usersex,jdbcType=CHAR}, #{userage,jdbcType=INTEGER}, #{usereducate,jdbcType=VARCHAR}, 
      #{usergraduate,jdbcType=VARCHAR}, #{userintroduce,jdbcType=VARCHAR}, #{usernickname,jdbcType=VARCHAR}, 
      #{userimg,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, #{addresssId,jdbcType=INTEGER}, 
      #{userphone,jdbcType=CHAR}, #{userenergy,jdbcType=VARCHAR}, #{useridnumber,jdbcType=CHAR}, 
      #{userstatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gem.share.entity.UserInfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="useraccount != null">
        userAccount,
      </if>
      <if test="userpwd != null">
        userPwd,
      </if>
      <if test="usersex != null">
        userSex,
      </if>
      <if test="userage != null">
        userAge,
      </if>
      <if test="usereducate != null">
        userEducate,
      </if>
      <if test="usergraduate != null">
        userGraduate,
      </if>
      <if test="userintroduce != null">
        userIntroduce,
      </if>
      <if test="usernickname != null">
        userNickName,
      </if>
      <if test="userimg != null">
        userImg,
      </if>
      <if test="useremail != null">
        userEmail,
      </if>
      <if test="addresssId != null">
        addresss_id,
      </if>
      <if test="userphone != null">
        userPhone,
      </if>
      <if test="userenergy != null">
        userEnergy,
      </if>
      <if test="useridnumber != null">
        userIdNumber,
      </if>
      <if test="userstatus != null">
        userStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="useraccount != null">
        #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null">
        #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null">
        #{usersex,jdbcType=CHAR},
      </if>
      <if test="userage != null">
        #{userage,jdbcType=INTEGER},
      </if>
      <if test="usereducate != null">
        #{usereducate,jdbcType=VARCHAR},
      </if>
      <if test="usergraduate != null">
        #{usergraduate,jdbcType=VARCHAR},
      </if>
      <if test="userintroduce != null">
        #{userintroduce,jdbcType=VARCHAR},
      </if>
      <if test="usernickname != null">
        #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null">
        #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null">
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="addresssId != null">
        #{addresssId,jdbcType=INTEGER},
      </if>
      <if test="userphone != null">
        #{userphone,jdbcType=CHAR},
      </if>
      <if test="userenergy != null">
        #{userenergy,jdbcType=VARCHAR},
      </if>
      <if test="useridnumber != null">
        #{useridnumber,jdbcType=CHAR},
      </if>
      <if test="userstatus != null">
        #{userstatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.share.entity.UserInfoExample" resultType="java.lang.Long">
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.useraccount != null">
        userAccount = #{record.useraccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userpwd != null">
        userPwd = #{record.userpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.usersex != null">
        userSex = #{record.usersex,jdbcType=CHAR},
      </if>
      <if test="record.userage != null">
        userAge = #{record.userage,jdbcType=INTEGER},
      </if>
      <if test="record.usereducate != null">
        userEducate = #{record.usereducate,jdbcType=VARCHAR},
      </if>
      <if test="record.usergraduate != null">
        userGraduate = #{record.usergraduate,jdbcType=VARCHAR},
      </if>
      <if test="record.userintroduce != null">
        userIntroduce = #{record.userintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.usernickname != null">
        userNickName = #{record.usernickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userimg != null">
        userImg = #{record.userimg,jdbcType=VARCHAR},
      </if>
      <if test="record.useremail != null">
        userEmail = #{record.useremail,jdbcType=VARCHAR},
      </if>
      <if test="record.addresssId != null">
        addresss_id = #{record.addresssId,jdbcType=INTEGER},
      </if>
      <if test="record.userphone != null">
        userPhone = #{record.userphone,jdbcType=CHAR},
      </if>
      <if test="record.userenergy != null">
        userEnergy = #{record.userenergy,jdbcType=VARCHAR},
      </if>
      <if test="record.useridnumber != null">
        userIdNumber = #{record.useridnumber,jdbcType=CHAR},
      </if>
      <if test="record.userstatus != null">
        userStatus = #{record.userstatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set user_id = #{record.userId,jdbcType=INTEGER},
      userAccount = #{record.useraccount,jdbcType=VARCHAR},
      userPwd = #{record.userpwd,jdbcType=VARCHAR},
      userSex = #{record.usersex,jdbcType=CHAR},
      userAge = #{record.userage,jdbcType=INTEGER},
      userEducate = #{record.usereducate,jdbcType=VARCHAR},
      userGraduate = #{record.usergraduate,jdbcType=VARCHAR},
      userIntroduce = #{record.userintroduce,jdbcType=VARCHAR},
      userNickName = #{record.usernickname,jdbcType=VARCHAR},
      userImg = #{record.userimg,jdbcType=VARCHAR},
      userEmail = #{record.useremail,jdbcType=VARCHAR},
      addresss_id = #{record.addresssId,jdbcType=INTEGER},
      userPhone = #{record.userphone,jdbcType=CHAR},
      userEnergy = #{record.userenergy,jdbcType=VARCHAR},
      userIdNumber = #{record.useridnumber,jdbcType=CHAR},
      userStatus = #{record.userstatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gem.share.entity.UserInfo">
    update userinfo
    <set>
      <if test="useraccount != null">
        userAccount = #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null">
        userPwd = #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null">
        userSex = #{usersex,jdbcType=CHAR},
      </if>
      <if test="userage != null">
        userAge = #{userage,jdbcType=INTEGER},
      </if>
      <if test="usereducate != null">
        userEducate = #{usereducate,jdbcType=VARCHAR},
      </if>
      <if test="usergraduate != null">
        userGraduate = #{usergraduate,jdbcType=VARCHAR},
      </if>
      <if test="userintroduce != null">
        userIntroduce = #{userintroduce,jdbcType=VARCHAR},
      </if>
      <if test="usernickname != null">
        userNickName = #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null">
        userImg = #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null">
        userEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="addresssId != null">
        addresss_id = #{addresssId,jdbcType=INTEGER},
      </if>
      <if test="userphone != null">
        userPhone = #{userphone,jdbcType=CHAR},
      </if>
      <if test="userenergy != null">
        userEnergy = #{userenergy,jdbcType=VARCHAR},
      </if>
      <if test="useridnumber != null">
        userIdNumber = #{useridnumber,jdbcType=CHAR},
      </if>
      <if test="userstatus != null">
        userStatus = #{userstatus,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gem.share.entity.UserInfo">
    update userinfo
    set userAccount = #{useraccount,jdbcType=VARCHAR},
      userPwd = #{userpwd,jdbcType=VARCHAR},
      userSex = #{usersex,jdbcType=CHAR},
      userAge = #{userage,jdbcType=INTEGER},
      userEducate = #{usereducate,jdbcType=VARCHAR},
      userGraduate = #{usergraduate,jdbcType=VARCHAR},
      userIntroduce = #{userintroduce,jdbcType=VARCHAR},
      userNickName = #{usernickname,jdbcType=VARCHAR},
      userImg = #{userimg,jdbcType=VARCHAR},
      userEmail = #{useremail,jdbcType=VARCHAR},
      addresss_id = #{addresssId,jdbcType=INTEGER},
      userPhone = #{userphone,jdbcType=CHAR},
      userEnergy = #{userenergy,jdbcType=VARCHAR},
      userIdNumber = #{useridnumber,jdbcType=CHAR},
      userStatus = #{userstatus,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--//    根据用户id查询用户状态-->
  <!--public String selectUserStatus(int user_id);-->
  <select id="selectUserStatus" parameterType="int" resultType="String">
    SELECT userStatus from userinfo where user_id=#{_parameter}
  </select>

  <!--//    查询用户登录时间-->
  <!--public Date selectUserLoginTime(int user_id);-->
  <select id="selectUserLoginTime" parameterType="int" resultType="Date">
    SELECT logintime FROM userinfo where user_id=#{_parameter}
  </select>

  <!--//    查询用户注册时间-->
  <!--public Date selectUserCreateTime(int user_id);-->
  <select id="selectUserCreateTime" parameterType="int" resultType="Date">
    SELECT userCreateTime from userinfo where user_id=#{_parameter}
  </select>

  <!--public List<UserInfo> selectAllUserInfo();-->
  <select id="selectAllUserInfo" resultType="UserInfo">
    select * from userinfo
  </select>
  <!--public List<UserInfo> selectCountUserInfo(int count);-->
  <select id="selectCountUserInfo" resultType="UserInfo" parameterType="int">
    select * from userinfo limit #{_parameter}
  </select>
  <!--public List<UserInfo> selectOrderAllUserInfo();-->
  <select id="selectOrderAllUserInfo" resultType="UserInfo" parameterType="int">
    select * from userinfo order by userEnergy desc
  </select>
  <!--public List<UserInfo> selectOrderCountUserInfo(int count);-->
  <select id="selectOrderCountUserInfo" resultType="UserInfo" parameterType="int">
    select * from userinfo order by userEnergy desc limit #{_parameter}
  </select>


</mapper>