<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.share.dao.ManagerOpeTimeMapper">
  <resultMap id="BaseResultMap" type="com.gem.share.entity.ManagerOpeTime">
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="managerOperate_id" jdbcType="INTEGER" property="manageroperateId" />
    <result column="managerOperateTime" jdbcType="DATE" property="manageroperatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    manager_id, managerOperate_id, managerOperateTime
  </sql>
  <select id="selectByExample" parameterType="com.gem.share.entity.ManagerOpeTimeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from manageropetime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gem.share.entity.ManagerOpeTimeExample">
    delete from manageropetime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.share.entity.ManagerOpeTime">
    insert into manageropetime (manager_id, managerOperate_id, managerOperateTime
      )
    values (#{managerId,jdbcType=INTEGER}, #{manageroperateId,jdbcType=INTEGER}, #{manageroperatetime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gem.share.entity.ManagerOpeTime">
    insert into manageropetime
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="manageroperateId != null">
        managerOperate_id,
      </if>
      <if test="manageroperatetime != null">
        managerOperateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="manageroperateId != null">
        #{manageroperateId,jdbcType=INTEGER},
      </if>
      <if test="manageroperatetime != null">
        #{manageroperatetime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.share.entity.ManagerOpeTimeExample" resultType="java.lang.Long">
    select count(*) from manageropetime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update manageropetime
    <set>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.manageroperateId != null">
        managerOperate_id = #{record.manageroperateId,jdbcType=INTEGER},
      </if>
      <if test="record.manageroperatetime != null">
        managerOperateTime = #{record.manageroperatetime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update manageropetime
    set manager_id = #{record.managerId,jdbcType=INTEGER},
      managerOperate_id = #{record.manageroperateId,jdbcType=INTEGER},
      managerOperateTime = #{record.manageroperatetime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>