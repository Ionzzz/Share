<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.share.dao.LabelInfoMapper">
  <resultMap id="BaseResultMap" type="com.gem.share.entity.LabelInfo">
    <id column="label_id" jdbcType="INTEGER" property="labelId" />
    <result column="labelName" jdbcType="VARCHAR" property="labelname" />
    <result column="labelContent" jdbcType="VARCHAR" property="labelcontent" />
    <result column="labelCreateTime" jdbcType="TIMESTAMP" property="labelcreatetime" />
    <result column="labelModifyTime" jdbcType="TIMESTAMP" property="labelmodifytime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    label_id, labelName, labelContent, labelCreateTime, labelModifyTime
  </sql>
  <select id="selectByExample" parameterType="com.gem.share.entity.LabelInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from labelinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from labelinfo
    where label_id = #{labelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from labelinfo
    where label_id = #{labelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gem.share.entity.LabelInfoExample">
    delete from labelinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gem.share.entity.LabelInfo">
    insert into labelinfo (label_id, labelName, labelContent, 
      labelCreateTime, labelModifyTime)
    values (#{labelId,jdbcType=INTEGER}, #{labelname,jdbcType=VARCHAR}, #{labelcontent,jdbcType=VARCHAR}, 
      #{labelcreatetime,jdbcType=TIMESTAMP}, #{labelmodifytime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gem.share.entity.LabelInfo">
    insert into labelinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        label_id,
      </if>
      <if test="labelname != null">
        labelName,
      </if>
      <if test="labelcontent != null">
        labelContent,
      </if>
      <if test="labelcreatetime != null">
        labelCreateTime,
      </if>
      <if test="labelmodifytime != null">
        labelModifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        #{labelId,jdbcType=INTEGER},
      </if>
      <if test="labelname != null">
        #{labelname,jdbcType=VARCHAR},
      </if>
      <if test="labelcontent != null">
        #{labelcontent,jdbcType=VARCHAR},
      </if>
      <if test="labelcreatetime != null">
        #{labelcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelmodifytime != null">
        #{labelmodifytime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gem.share.entity.LabelInfoExample" resultType="java.lang.Long">
    select count(*) from labelinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update labelinfo
    <set>
      <if test="record.labelId != null">
        label_id = #{record.labelId,jdbcType=INTEGER},
      </if>
      <if test="record.labelname != null">
        labelName = #{record.labelname,jdbcType=VARCHAR},
      </if>
      <if test="record.labelcontent != null">
        labelContent = #{record.labelcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.labelcreatetime != null">
        labelCreateTime = #{record.labelcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labelmodifytime != null">
        labelModifyTime = #{record.labelmodifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update labelinfo
    set label_id = #{record.labelId,jdbcType=INTEGER},
      labelName = #{record.labelname,jdbcType=VARCHAR},
      labelContent = #{record.labelcontent,jdbcType=VARCHAR},
      labelCreateTime = #{record.labelcreatetime,jdbcType=TIMESTAMP},
      labelModifyTime = #{record.labelmodifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gem.share.entity.LabelInfo">
    update labelinfo
    <set>
      <if test="labelname != null">
        labelName = #{labelname,jdbcType=VARCHAR},
      </if>
      <if test="labelcontent != null">
        labelContent = #{labelcontent,jdbcType=VARCHAR},
      </if>
      <if test="labelcreatetime != null">
        labelCreateTime = #{labelcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelmodifytime != null">
        labelModifyTime = #{labelmodifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where label_id = #{labelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gem.share.entity.LabelInfo">
    update labelinfo
    set labelName = #{labelname,jdbcType=VARCHAR},
      labelContent = #{labelcontent,jdbcType=VARCHAR},
      labelCreateTime = #{labelcreatetime,jdbcType=TIMESTAMP},
      labelModifyTime = #{labelmodifytime,jdbcType=TIMESTAMP}
    where label_id = #{labelId,jdbcType=INTEGER}
  </update>

  <!--public LabelInfo selectAllLabel();-->
  <select id="selectAllLabel" resultType="LabelInfo">
    select * from labelinfo;
  </select>
  <!--public LabelInfo selectLabelByLabelId(int label_id);-->
  <select id="selectLabelByLabelId" parameterType="int" resultType="LabelInfo">
    select * from labelinfo where label_id=#{_parameter}
  </select>
  <!--public LabelInfo selectLabelByLabelName(String labelName);-->
  <select id="selectLabelByLabelName" parameterType="String" resultType="LabelInfo">
    select * from labelinfo where labelName='${_parameter}'
  </select>
  <!--public LabelInfo selectLabelByLikeLabelName(String labelName);-->
  <select id="selectLabelByLikeLabelName" parameterType="String" resultType="LabelInfo">
    select * from labelinfo where labelName like "%" #{_parameter} "%"
  </select>
  <!--public LabelInfo updateLabelByLabelId(LabelInfo labelInfo);-->
  <update id="updateLabelByLabelId" parameterType="LabelInfo">
    update labelinfo set labelName=#{labelname},labelContent=#{labelcontent},
                         labelCreateTime=#{labelcreatetime},
                         labelModifyTime=#{labelmodifytime}
                    where label_id=#{labelId}
  </update>
  <!--public boolean insertLabelInfo(LabelInfo labelInfo);-->
  <insert id="insertLabelInfo" parameterType="LabelInfo" useGeneratedKeys="true" keyProperty="label_id">
    insert into labelinfo values(#{label_id},#{labelName},#{labelContent},#{labelCreateTime},#{labelModifyTime})
  </insert>
  <!--public boolean deleteLabelByLabelId(int label_id);-->
  <delete id="deleteLabelByLabelId" parameterType="int">
    delete from labelinfo where label_id=#{_parameter}
  </delete>

</mapper>