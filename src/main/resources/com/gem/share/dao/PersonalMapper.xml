<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gem.share.dao.PersonalMapper">

    <resultMap id="selectBlogContentByUserIdMap" type="BlogContent">
        <id column="blog_id" property="blogId"/>
        <result column="user_id" property="userId"/>
        <result column="blogPics_id" property="blogpicsId"/>
        <result column="blogCreateTime" property="blogcreatetime"/>
        <result column="blogFlag" property="blogflag"/>
        <result column="essayFlag" property="essayflag"/>
        <result column="blogContent" property="blogcontent"/>
        <association property="pics" javaType="BlogPics">
            <result column="pic" property="pic"/>
        </association>
    </resultMap>
    <!--//    根据用户id查询该用户的所有博客  按时间倒序排列-->
    <!--public List<BlogContent> selectBlogContentByUserId(int userid);-->
    <select id="selectBlogContentByUserId" parameterType="int" resultMap="selectBlogContentByUserIdMap">
        SELECT bc.*,bp.pic FROM blogcontent bc,blogpics bp
        WHERE bc.blogPics_id = bp.blogPics_id AND user_id=#{_parameter} ORDER BY blogCreateTime
    </select>

    <!--//    根据用户id查找自己的粉丝-->
    <!--public List<UserInfo> selectFollowUserByUserId(int user_id);-->
    <select id="selectFollowUserByUserId" parameterType="int" resultType="UserInfo">
        SELECT * FROM userinfo WHERE user_id IN
        (SELECT followUser_id FROM followrelation WHERE user_id=#{_parameter})
    </select>

    <!--//    根据用户id、分组名获取该分组的关注人信息-->
    <!--public List<UserInfo> selectFollowUserByUserIdAndGroupId(int user_id,String followGroupName);-->
    <select id="selectFollowUserByUserIdAndGroupId" resultType="UserInfo">
        SELECT * FROM userinfo WHERE user_id IN
        (SELECT user_id FROM followrelation WHERE followUser_id=#{param1} AND followGroup_id =
        (SELECT followGroup_id FROM followgroup WHERE followGroupName = #{param2}))
    </select>

    <!--//    根据用户id查找自己关注的人-->
    <!--public List<UserInfo> selectUserByFollowUserId(int user_id);-->
    <select id="selectUserByFollowUserId" parameterType="int" resultType="UserInfo">
        SELECT * FROM userinfo WHERE user_id IN
        (SELECT user_id FROM followrelation WHERE followUser_id=#{_parameter})
    </select>

    <!--//    根据用户id查询所有的分组-->
    <!--public List<FollowGroup> selectAllGroupByUserId(int user_id);-->
    <select id="selectAllGroupByUserId" parameterType="int" resultType="FollowGroup">
        SELECT * FROM followgroup WHERE followGroup_id IN
        (SELECT followGroup_id FROM followrelation WHERE user_id = #{_parameter})
    </select>

    <!--//    根据用户id查询用户信息-->
    <!--public UserInfo selectUserById(int user_id);-->
    <select id="selectUserById" parameterType="int" resultType="UserInfo">
        select * from userInfo WHERE user_id = #{_paramter}
    </select>

    <!--//    根据地址id查询地址信息-->
    <!--public Address selectAddressByAddressId(int userId,int addressId);-->
    <select id="selectAddressByAddressId" parameterType="int" resultType="Address">
       SELECT * FROM address WHERE address_id = #{_parameter}
    </select>

    <!--//    根据自己的id和关注人的id取消关注此人-->
    <!--public boolean deleteUserByUserIdAndFollowUser(int userId,int followUserId);-->
    <delete id="deleteUserByUserIdAndFollowUser">
        delete FROM followrelation WHERE user_id = #{param1} AND followUser_id = #{param2}
    </delete>

    <!--//    添加关注人-->
    <!--public Boolean insertfollow(int user_id,int followUser_id);-->
    <insert id="insertfollow">
        INSERT INTO followrelation(user_id,followUser_id) VALUES(#{param1},#{param2})
    </insert>


    <!--查询我所有的评论内容、评论的博客内容、发布这条博客的用户信息、评论时间降序-->
    <!--public List<MyAllComment> selectallcomment(int commentUser_id);-->
    <select id="selectallcomment" parameterType="int" resultType="MyAllComment">
         SELECT ui.user_id,ui.userNickName,ui.userimg,bcon.blog_id,bcon.blogContent,bcon.blogCreateTime,bcom.comment_id,bcom.commentUser_id,bcom.commentContent,bcom.commentTime
			FROM userinfo ui,blogcontent bcon,blogcomment bcom
		      WHERE bcon.blog_id = bcom.blog_id AND bcon.user_id = ui.user_id AND commentUser_id = #{_paramter} ORDER BY commentTime DESC
    </select>

    <!--查询我所有点赞的博客内容、发布这条博客的用户信息、点赞时间降序-->
    <!--public List<MyAllZan> selectallzan(int zanUser_id);-->
    <select id="selectallzan" parameterType="int" resultType="MyAllZan">
        SELECT ui.user_id,ui.userNickName,ui.userimg,bcon.blog_id,bcon.blogContent,bcon.blogCreateTime,bz.blogZan_id,bz.zan_time
		  FROM userinfo ui,blogcontent bcon,blogzan bz
			WHERE bcon.blog_id = bz.blog_id AND bcon.user_id = ui.user_id AND bz.user_id = 170 ORDER BY zan_time DESC
    </select>

    <!--查询我所有收藏的博客内容、发布这条博客的用户信息、点赞时间降序-->
    <!--public List<MyAllZan> selectallCollect(int collectUser_id);-->
    <select id="selectallCollect" parameterType="int" resultType="MyAllZan">
         SELECT ui.user_id,ui.userNickName,ui.userimg,bcon.blog_id,bcon.blogContent,bcon.blogCreateTime,bcol.bCollect_id
            FROM userinfo ui,blogcontent bcon,blogcollect bcol
               WHERE bcon.blog_id = bcol.blog_id AND bcon.user_id = ui.user_id AND bcol.user_id = 170
    </select>

    <!--//    修改个人昵称-->
    <!--public boolean updateNickName(int user_id,String nickname);-->
    <update id="updateNickName">
        UPDATE userinfo SET userNickName = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    修改个人姓名-->
    <!--public boolean updateName(int user_id,String name);-->
    <update id="updateName">
        UPDATE userinfo SET username = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    修改个人简介-->
    <!--public boolean updateIntroduce(int user_id,String introduce);-->
    <update id="updateIntroduce">
        UPDATE userinfo SET userIntroduce = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    修改学校信息-->
    <!--public boolean updateSchool(int user_id,String school);-->
    <update id="updateSchool">
        UPDATE userinfo SET userGraduate = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    修改出生日期-->
    <!--public boolean updateCreateTime(int user_id, Date createdate);-->
    <update id="updateCreateTime">
        UPDATE userinfo SET userCreateTime = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    修改性别-->
    <!--public boolean updateSex(int user_id,String sex);-->
    <update id="updateSex">
        UPDATE userinfo SET userSex = #{param2} WHERE user_id = #{param1}
    </update>

    <!--//    从地址表查询插入地址-->
    <!--public Address selectaddress(String province,String city,String county);-->
    <select id="selectaddress" resultType="Address">
        SELECT * FROM address WHERE province = #{param1} AND city = #{param2} AND county = #{param3}
    </select>

    <!--//    在地址表中插入地址-->
    <!--public boolean insertaddress(String province,String city,String county);-->
    <insert id="insertaddress">
        INSERT INTO address(country,province,city,county) VALUES('China',#{param1},#{param2},#{param3})
    </insert>

    <!--//    向用户信息表中插入地址信息-->
    <!--public boolean updateaddressid(int user_id,int address_id);-->
    <update id="updateaddressid">
        UPDATE userinfo SET addresss_id = #{param2} WHERE user_id = #{param1}
    </update>

</mapper>